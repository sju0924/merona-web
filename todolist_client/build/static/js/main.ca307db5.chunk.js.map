{"version":3,"sources":["Components/TodoTemplate.js","Components/TodoContext.js","Components/TodoHead.js","Components/TodoItem.js","Components/TodoList.js","Components/TodoCreate.js","App.js","reportWebVitals.js","index.js"],"names":["TodoTemplateBlock","styled","div","TodoTemplate","children","initialTodos","id","text","done","todoReducer","state","action","type","concat","todo","map","filter","Error","TodoStateContext","createContext","TodoDispatchContext","TodoNextIdContext","TodoProvider","useReducer","dispatch","nextId","useRef","Provider","value","useTodoState","useContext","useTodoDispatch","TodoHeadBlock","TodoHead","undoneTasks","today","Date","dateString","toLocaleDateString","year","month","day","dayName","weekday","className","length","Remove","TodoItemBlock","CheckCircle","props","css","Text","TodoItem","onClick","React","memo","TodoListBlock","TodoList","todos","CircleButton","button","open","InsertFormPositioner","InsertForm","form","Input","input","TodoCreate","useState","setOpen","setValue","onSubmit","e","preventDefault","current","autoFocus","placeholder","onChange","target","GlobalStyle","createGlobalStyle","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ca307db5.chunk.js","sourcesContent":["import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst TodoTemplateBlock = styled.div`\r\n  width: 512px;\r\n  height: 768px;\r\n\r\n  position: relative; /* 추후 박스 하단에 추가 버튼을 위치시키기 위한 설정 */\r\n  background: white;\r\n  border-radius: 16px;\r\n  box-shadow: 0 0 8px 0 rgba(0, 0, 0, 0.04);\r\n\r\n  margin: 0 auto; /* 페이지 중앙에 나타나도록 설정 */\r\n\r\n  margin-top: 96px;\r\n  margin-bottom: 32px;\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\nfunction TodoTemplate({ children }) {\r\n  return <TodoTemplateBlock>{children}</TodoTemplateBlock>;\r\n}\r\n\r\nexport default TodoTemplate;","import React, { useReducer, createContext, useContext, useRef } from 'react';\r\n\r\nconst initialTodos = [\r\n  {\r\n    id: 1,\r\n    text: '일일 퀘스트',\r\n    done:false\r\n  },\r\n  {\r\n    id: 2,\r\n    text: '코인 모으기',\r\n    done: false\r\n  },\r\n  {\r\n    id: 3,\r\n    text: '우르스 돌기',\r\n    done: false\r\n  },\r\n  {\r\n    id: 4,\r\n    text: '일간보스 잡기',\r\n    done: false\r\n  },\r\n\r\n  {\r\n    id: 5,\r\n    text: '몬스터파크 돌기',\r\n    done: false\r\n  },\r\n  {\r\n    id: 6,\r\n    text: '유니온 코인 모으기',\r\n    done: false\r\n  },\r\n  {\r\n    id: 7,\r\n    text: '명장 유지하기',\r\n    done: false\r\n  }\r\n];\r\n\r\nfunction todoReducer(state, action) {\r\n  switch (action.type) {\r\n    case 'CREATE':\r\n      return state.concat(action.todo);\r\n    case 'TOGGLE':\r\n      return state.map(todo =>\r\n        todo.id === action.id ? { ...todo, done: !todo.done } : todo\r\n      );\r\n    case 'REMOVE':\r\n      return state.filter(todo => todo.id !== action.id);\r\n    default:\r\n      throw new Error(`Unhandled action type: ${action.type}`);\r\n  }\r\n}\r\n\r\nconst TodoStateContext = createContext();\r\nconst TodoDispatchContext = createContext();\r\nconst TodoNextIdContext = createContext();\r\n\r\nexport function TodoProvider({ children }) {\r\n  const [state, dispatch] = useReducer(todoReducer, initialTodos);\r\n  const nextId = useRef(8);\r\n\r\n  return (\r\n    <TodoStateContext.Provider value={state}>\r\n      <TodoDispatchContext.Provider value={dispatch}>\r\n        <TodoNextIdContext.Provider value={nextId}>\r\n          {children}\r\n        </TodoNextIdContext.Provider>\r\n      </TodoDispatchContext.Provider>\r\n    </TodoStateContext.Provider>\r\n  );\r\n}\r\n\r\nexport function useTodoState() {\r\n  return useContext(TodoStateContext);\r\n}\r\n\r\nexport function useTodoDispatch() {\r\n  return useContext(TodoDispatchContext);\r\n}\r\n\r\nexport function useTodoNextId() {\r\n  return useContext(TodoNextIdContext);\r\n}","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { useTodoState } from './TodoContext';\r\n\r\nconst TodoHeadBlock = styled.div`\r\n  padding-top: 48px;\r\n  padding-left: 32px;\r\n  padding-right: 32px;\r\n  padding-bottom: 24px;\r\n  border-bottom: 1px solid #e9ecef;\r\n  h1 {\r\n    margin: 0;\r\n    font-size: 36px;\r\n    color: #343a40;\r\n  }\r\n  .day {\r\n    margin-top: 4px;\r\n    color: #868e96;\r\n    font-size: 21px;\r\n  }\r\n  .tasks-left {\r\n    color: #20c997;\r\n    font-size: 18px;\r\n    margin-top: 40px;\r\n    font-weight: bold;\r\n  }\r\n`;\r\n\r\nfunction TodoHead() {\r\n  const todos = useTodoState();\r\n  const undoneTasks = todos.filter(todo => !todo.done);\r\n\r\n  const today = new Date();\r\n  const dateString = today.toLocaleDateString('ko-KR', {\r\n    year: 'numeric',\r\n    month: 'long',\r\n    day: 'numeric'\r\n  });\r\n  const dayName = today.toLocaleDateString('ko-KR', { weekday: 'long' });\r\n\r\n  return (\r\n    <TodoHeadBlock>\r\n      <h1>{dateString}</h1>\r\n      <div className=\"day\">{dayName}</div>\r\n      <div className=\"tasks-left\">할 일 {undoneTasks.length}개 남음</div>\r\n    </TodoHeadBlock>\r\n  );\r\n}\r\n\r\nexport default TodoHead;","import React from 'react';\r\nimport styled, { css } from 'styled-components';\r\nimport { MdDone, MdDelete } from 'react-icons/md';\r\nimport { useTodoDispatch } from './TodoContext';\r\n\r\nconst Remove = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  color: #dee2e6;\r\n  font-size: 24px;\r\n  cursor: pointer;\r\n  opacity: 0;\r\n  &:hover {\r\n    color: #ff6b6b;\r\n  }\r\n`;\r\n\r\nconst TodoItemBlock = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  padding-top: 12px;\r\n  padding-bottom: 12px;\r\n  &:hover {\r\n    ${Remove} {\r\n      opacity: 1;\r\n    }\r\n  }\r\n`;\r\n\r\nconst CheckCircle = styled.div`\r\n  width: 32px;\r\n  height: 32px;\r\n  border-radius: 16px;\r\n  border: 1px solid #ced4da;\r\n  font-size: 24px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  margin-right: 20px;\r\n  cursor: pointer;\r\n  ${props =>\r\n    props.done &&\r\n    css`\r\n      border: 1px solid #38d9a9;\r\n      color: #38d9a9;\r\n    `}\r\n`;\r\n\r\nconst Text = styled.div`\r\n  flex: 1;\r\n  font-size: 21px;\r\n  color: #495057;\r\n  ${props =>\r\n    props.done &&\r\n    css`\r\n      color: #ced4da;\r\n    `}\r\n`;\r\n\r\nfunction TodoItem({ id, done, text }) {\r\n  const dispatch = useTodoDispatch();\r\n  const onToggle = () => dispatch({ type: 'TOGGLE', id });\r\n  const onRemove = () => dispatch({ type: 'REMOVE', id });\r\n  return (\r\n    <TodoItemBlock>\r\n      <CheckCircle done={done} onClick={onToggle}>\r\n        {done && <MdDone />}\r\n      </CheckCircle>\r\n      <Text done={done}>{text}</Text>\r\n      <Remove onClick={onRemove}>\r\n        <MdDelete />\r\n      </Remove>\r\n    </TodoItemBlock>\r\n  );\r\n}\r\n\r\nexport default React.memo(TodoItem);","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport TodoItem from './TodoItem';\r\nimport { useTodoState } from './TodoContext';\r\n\r\nconst TodoListBlock = styled.div`\r\n  flex: 1;\r\n  padding: 20px 32px;\r\n  padding-bottom: 48px;\r\n  overflow-y: auto;\r\n`;\r\n\r\nfunction TodoList() {\r\n  const todos = useTodoState();\r\n\r\n  return (\r\n    <TodoListBlock>\r\n      {todos.map(todo => (\r\n        <TodoItem\r\n          key={todo.id}\r\n          id={todo.id}\r\n          text={todo.text}\r\n          done={todo.done}\r\n        />\r\n      ))}\r\n    </TodoListBlock>\r\n  );\r\n}\r\n\r\nexport default TodoList;","import React, { useState } from 'react';\r\nimport styled, { css } from 'styled-components';\r\nimport { MdAdd } from 'react-icons/md';\r\nimport { useTodoDispatch, useTodoNextId } from './TodoContext';\r\n\r\nconst CircleButton = styled.button`\r\n  background: #38d9a9;\r\n  &:hover {\r\n    background: #63e6be;\r\n  }\r\n  &:active {\r\n    background: #20c997;\r\n  }\r\n\r\n  z-index: 5;\r\n  cursor: pointer;\r\n  width: 80px;\r\n  height: 80px;\r\n  align-items: center;\r\n  justify-content: center;\r\n  font-size: 60px;\r\n  position: absolute;\r\n  left: 50%;\r\n  bottom: 0px;\r\n  transform: translate(-50%, 50%);\r\n  color: white;\r\n  border-radius: 50%;\r\n  border: none;\r\n  outline: none;\r\n\r\n\r\n  transition: 0.125s all ease-in;\r\n  ${props =>\r\n    props.open &&\r\n    css`\r\n      background: #ff6b6b;\r\n      &:hover {\r\n        background: #ff8787;\r\n      }\r\n      &:active {\r\n        background: #fa5252;\r\n      }\r\n      transform: translate(-50%, 50%) rotate(45deg);\r\n    `}\r\n`;\r\n\r\nconst InsertFormPositioner = styled.div`\r\n  width: 100%;\r\n  bottom: 0;\r\n  left: 0;\r\n  position: absolute;\r\n`;\r\n\r\nconst InsertForm = styled.form`\r\n  background: #f8f9fa;\r\n  padding-left: 32px;\r\n  padding-top: 32px;\r\n  padding-right: 32px;\r\n  padding-bottom: 72px;\r\n\r\n  border-bottom-left-radius: 16px;\r\n  border-bottom-right-radius: 16px;\r\n  border-top: 1px solid #e9ecef;\r\n`;\r\n\r\nconst Input = styled.input`\r\n  padding: 12px;\r\n  border-radius: 4px;\r\n  border: 1px solid #dee2e6;\r\n  width: 100%;\r\n  outline: none;\r\n  font-size: 18px;\r\n  box-sizing: border-box;\r\n`;\r\n\r\nfunction TodoCreate() {\r\n  const [open, setOpen] = useState(false);\r\n  const [value, setValue] = useState('');\r\n\r\n  const dispatch = useTodoDispatch();\r\n  const nextId = useTodoNextId();\r\n\r\n  const onToggle = () => setOpen(!open);\r\n  const onChange = e => setValue(e.target.value);\r\n  const onSubmit = e => {\r\n    e.preventDefault(); // 새로고침 방지\r\n    dispatch({\r\n      type: 'CREATE',\r\n      todo: {\r\n        id: nextId.current,\r\n        text: value,\r\n        done: false\r\n      }\r\n    });\r\n    setValue('');\r\n    setOpen(false);\r\n    nextId.current += 1;\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {open && (\r\n        <InsertFormPositioner>\r\n          <InsertForm onSubmit={onSubmit}>\r\n            <Input\r\n              autoFocus\r\n              placeholder=\"할 일을 입력 후, Enter 를 누르세요\"\r\n              onChange={onChange}\r\n              value={value}\r\n            />\r\n          </InsertForm>\r\n        </InsertFormPositioner>\r\n      )}\r\n      <CircleButton onClick={onToggle} open={open}>\r\n        <MdAdd />\r\n      </CircleButton>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default React.memo(TodoCreate);","import React from 'react';\nimport { createGlobalStyle } from 'styled-components';\nimport TodoTemplate from './Components/TodoTemplate';\nimport TodoHead from './Components/TodoHead';\nimport TodoList from './Components/TodoList';\nimport TodoCreate from './Components/TodoCreate';\nimport { TodoProvider } from './Components/TodoContext';\n\nconst GlobalStyle = createGlobalStyle`\n  body {\n    background: #e9ecef;\n  }\n`;\n\nfunction App() {\n  return (\n    <TodoProvider>\n      <GlobalStyle />\n      <TodoTemplate>\n        <TodoHead />\n        <TodoList />\n        <TodoCreate />\n      </TodoTemplate>\n    </TodoProvider>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}